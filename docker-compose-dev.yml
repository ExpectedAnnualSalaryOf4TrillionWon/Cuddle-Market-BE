services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    volumes:
      - ./:/app
      - /app/.venv
      - static-:/app/staticfiles
    ports:
      - "8000:8000"
    networks:
      - app_network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--database", "default"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7-alpine # 특정 버전 명시
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    depends_on:
      django:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - static-:/app/staticfiles:ro
      - ./resources/nginx/nginx-dev.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network
    command: nginx -g 'daemon off;' # Nginx 실행만 담당

volumes:
  static-:
  redis-data:

networks:
  app_network:
    driver: bridge